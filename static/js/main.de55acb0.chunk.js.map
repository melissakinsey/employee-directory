{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Nav/Epidigm-logo.png","components/Nav/Nav.jsx","components/Person/Person.jsx","components/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","filter","setFilter","style","width","background","border","padding","value","placeholder","onChange","Nav","className","height","src","logo","alt","Person","props","scope","number","item","picture","thumbnail","name","first","last","gender","Table","useState","sorted","setSorted","sort","key1","key2","unsorted","a","b","localeCompare","console","log","useEffect","items","onClick","map","login","uuid","App","e","setState","target","state","fetch","then","response","json","respond","results","this","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de55acb0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Searchbar = ({filter,setFilter}) => {\n  const BarStyling = {\n    width: \"20rem\",\n    background: \"#F2F1F9\",\n    border: \"none\",\n    padding: \"0.5rem\"\n  };\n  return (\n    <input \n     style={BarStyling}\n     value={filter}\n     placeholder={\"search...\"}\n     onChange={setFilter}\n    />\n  );\n}\n\nexport default Searchbar","export default __webpack_public_path__ + \"static/media/Epidigm-logo.4cea20b6.png\";","import React from \"react\";\nimport Searchbar from \"../Searchbar/Searchbar.jsx\"\nimport logo from \"./Epidigm-logo.png\"\nconst Nav = ({filter,setFilter}) =>\n{\n    return (\n      <nav className=\"navbar sticky-top navbar-light bg-light\">\n        <div className=\"container-fluid d-flex justify-content-between\">\n          <div className=\"d-flex align-items-center\">\n          <img height=\"80\" src={logo} alt=\"logo\" />\n          <div className=\"mx-2\">\n            Employee Directory\n          </div>\n          </div>\n          <Searchbar filter={filter} setFilter={setFilter}/>\n        </div>\n      </nav>\n  )  \n}\n\nexport default Nav","\nconst Person = (props) =>\n{\n    return (\n        <tr>\n            <td scope=\"row\">{props.number + 1}</td>\n            <td><img src={props.item.picture.thumbnail} alt=\"Employee's badge photo\"/></td>\n          <td>{props.item.name.first}</td>\n          <td>{props.item.name.last}</td>\n          <td>{props.item.gender}</td>\n        </tr>\n    )\n    \n}\n\nexport default Person ","import React, {useEffect, useState} from \"react\";\nimport Person from \"../Person/Person\";\n\nfunction Table(props)\n{\n  const [sorted, setSorted] = useState([]);\n\n  useEffect(() =>\n  {\n    setSorted(props.items)\n  },[props.items])\n\n  function sort(key1,key2)\n  {\n      \n    let unsorted = [...sorted];\n    unsorted.sort((a, b) => a[key1][key2].localeCompare(b[key1][key2])\n    )\n    console.log(unsorted)\n    setSorted(unsorted)\n  }  \n\n  return (\n    <table className=\"table table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th>Badge</th>\n          <th scope=\"col\" onClick={()=>sort(\"name\",\"first\")}>First</th>\n          <th scope=\"col\" onClick={()=>sort(\"name\",\"last\")}>Last</th>\n          <th scope=\"col\">Gender</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          sorted.map((item, number) =>\n            <Person item={item} key={item.login.uuid} number={number}/>\n          )\n        }\n      </tbody>\n    </table>\n  )\n}\n\nexport default Table","import React from \"react\";\nimport Nav from \"./components/Nav/Nav.jsx\";\nimport Table from \"./components/Table/Table.jsx\";\n\nclass App extends React.Component{\n  // Set up constructor to accept data array\n  constructor(){\n    super();\n    this.state = {\n      items: [],\n      filter:\"\"\n    }\n  };\n  // Make Ajax call to the randomuser API. Use componentDidMount because componentWillMount is deprecated.\n  componentDidMount(){\n    fetch(\"https://randomuser.me/api?results=10\")\n      .then(response => response.json())\n      // Use results to set state\n      .then(respond => this.setState({ items: respond.results }))\n  };\n  setFilter = (e) => this.setState({ filter: e.target.value });//errow function yo prevent loosing context\n\n  // Use render method\n  render(){\n    let {items, filter} = this.state;\n    if (this.state.filter){\n      items = items.filter(item =>\n        item.name.first.toLowerCase().includes(this.state.filter.toLowerCase())\n        ||\n        item.name.last.toLowerCase().includes(this.state.filter.toLowerCase())\n      )\n    }\n    return (\n      <div>\n        <Nav filter={filter} setFilter={this.setFilter}/>\n        <Table items={items}/>\n        {/* <input type=\"text\" onChange />*/}\n      </div>\n    )\n\n\n\n    // Filter results by date of birth (dob)\n\n    // Use filter method to listen for filter event (e) and accept input field (e.target.value)\n\n    // }//Map items in the array returned from the API call\n    // Use email as unique key to identify each result returned\n    //Filter by dob\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}